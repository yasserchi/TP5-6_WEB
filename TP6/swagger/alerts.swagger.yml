swagger: '2.0'
info:
  description: 'This swagger defines the Alert API. You can find out more about Swagger at [http://swagger.io](http://swagger.io) and open this file with the [online editor](http://editor.swagger.io/).'
  version: 1.0.0
  title: Swagger Alerts API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: api.example.com
basePath: /1
tags:
  - name: alert
    description: Everything to manage Alerts
    externalDocs:
      description: Find out more
      url: 'https://github.com/benco1967/cours-esir-2019'
schemes:
  - https
  - http
securityDefinitions:
  Bearer:
    description: |
      For accessing the API a valid JWT token must be passed in all the queries in
      the 'Authorization' header.

      A valid JWT token is generated by the *Account Management* after giving a 
      valid user & password.
      The following syntax must be used in the '**Authorization**' header : **Bearer xxxxxx.yyyyyyy.zzzzzz**
    type: apiKey
    name: Authorization
    in: header
paths:
  /alerts:
    post:
      tags:
        - alert
      summary: Create a new alert
      description: Create a new alert in the alerts list
      operationId: addAlert
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Alert object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Alert'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Alert'
        '405':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
      security:
        - Bearer: []
  /alerts/search:
    get:
      tags:
        - alert
      summary: Search Alerts by status
      description: Multiple status can be provided with comma separated status. 
      operationId: searchAlert
      produces:
        - application/json
      parameters:
        - name: status
          in: query
          description: Tags to filter by
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Alert'
        '400':
          description: Invalid tag value
          schema:
            $ref: '#/definitions/Error'
      security:
        - Bearer: []
  '/alerts/{alertId}':
    get:
      tags:
        - alert
      summary: Find alert by ID
      description: Returns a single alert
      operationId: getAlert
      produces:
        - application/json
      parameters:
        - name: alertId
          in: path
          description: ID of alert to return
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Alert'
        '400':
          description: Invalid ID supplied
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Alert not found
          schema:
            $ref: '#/definitions/Error'
      security:
        - Bearer: []
    put:
      tags:
        - alert
      summary: Updates an alert
      description: ''
      operationId: updateAlert
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: alertId
          in: path
          description: ID of alert that needs to be updated
          required: true
          type: string
        - name: alert
          in: body
          description: Updated alert
          required: true
          schema:
            $ref: '#/definitions/Alert'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Alert'
        '405':
          description: Invalid input
      security:
        - Bearer: []
    delete:
      tags:
        - alert
      summary: Deletes an alert
      description: ''
      operationId: deleteAlert
      produces:
        - application/json
      parameters:
        - name: api_key
          in: header
          required: false
          type: string
        - name: alertId
          in: path
          description: Alert id to delete
          required: true
          type: string
      responses:
        '204':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Alert not found
      security:
        - Bearer: []
definitions:
  Category:
    type: string
    enum:
      - weather
      - sea
      - transport
  Status:
    type: string
    enum:
      - warning
      - threat
      - danger
      - risk
  Alert:
    type: object
    required:
      - label
      - type
      - status
      - from
      - to
    properties:
      id:
        type: string
      type:
        $ref: '#/definitions/Category'
      label:
        type: string
        example: My alert for
      status:
        $ref: '#/definitions/Status'
      from:
        type: string
        description: beginning ISO date
      to:
        type: string
        description: beginning ISO date
  Error:
    type: object
    properties:
      code:
        type: number
      type:
        type: string
      message:
        type: string
